error_log /dev/stdout info;
error_log stderr warn;
pid /run/nginx.pid;
events {
    multi_accept on;
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        timeout 60;
        chunk_size 8192;
        max_connections 100;

        application stream {
            live on;
            interleave on;
            exec_push bash -c "ffmpeg -i rtmp://localhost/stream/$name -codec copy -f flv rtmp://localhost/hls/$name";
            exec_push bash -c "ffmpeg -i rtmp://localhost/stream/$name -codec copy -f flv rtmp://localhost/dash/$name";
            allow publish 127.0.0.1;
            allow play all;
            wait_video on;
            wait_key on;
            sync 10ms;
        }

        application hls {
            live on;
            interleave on;
            hls on;
            hls_fragment_naming system;
            hls_fragment 5;
            hls_playlist_length 60;
            hls_path /opt/data/hls;
            allow publish 127.0.0.1;
            allow play all;
            wait_video on;
            wait_key on;
            sync 10ms;
            exec_push bash -c "ffmpeg -i rtmp://localhost/hls/$name -codec copy -f flv rtmp://localhost/hls/index";
        }

        application dash {
            live on;
            interleave on;
            dash on;
            dash_path /opt/data/dash;
            dash_fragment 5s;
            dash_playlist_length 60s;
            allow publish 127.0.0.1;
            allow play all;
            wait_video on;
            wait_key on;
            sync 10ms;
            exec_push bash -c "ffmpeg -i rtmp://localhost/dash/$name -codec copy -f flv rtmp://localhost/dash/index";
        }
    }
}


http {
    sendfile off;
    tcp_nopush on;
    aio on;
    directio 512;
    default_type application/octet-stream;
    include       mime.types;
    keepalive_timeout  65;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    server {
        listen 80 default_server;
        listen [::]:80 default_server; 	
        server_name ##DOMAIN##;
        index index.m3u8 index.mpd index.php index.html index.htm;
        root /var/www/html;

        # return 301 https://$host$request_uri;
        
        # Add option for x-forward-for (real ip when behind elb)
        #real_ip_header X-Forwarded-For;
        #set_real_ip_from 172.16.0.0/12;

        # block access to sensitive information about git
	    location /.git {
           deny all;
           return 403;
        }

        location / {
            try_files $uri $uri/ =404;
        }

        error_page 404 /404.html;
        location = /404.html {
                root /var/www/errors;
                internal;
        }

        # pass the PHP scripts to FastCGI server listening on container php:9000
        #
        # Pass PHP scripts to PHP-FPM
        location ~ \.php$ {
            try_files $uri =404;
		    fastcgi_split_path_info ^(.+\.php)(/.+)$;
		    fastcgi_pass unix:/var/run/php-fpm.sock;
		    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		    fastcgi_index index.php;
		    include fastcgi_params;
        }

        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
            expires 5d;
        }

        location /hls {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            index index.m3u8;

            root /opt/data;
        }

        location /dash {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            index index.mpd;

            root /opt/data;
        }

        location /rtmpcontrol {
            rtmp_control all;
        }

        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet /var/www/html/stat.xsl;
        }

        location /.well-known {
                allow all;
                auth_basic off;
        }

        # deny access to . files, for security
        #
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # allow fpm ping and status from localhost
        #
        location ~ ^/(fpm-status|fpm-ping)$ {
            access_log off;
            allow 127.0.0.1;
            deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }

    }

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*.conf;
    
}
